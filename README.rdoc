Authentication updates:

1. Show recipes page --> Ability to edit/update own recipes only.
2. Navignation partial --> Toggle menu, restrict new
3. Restrict thumbs up and thumbs down action to logged in users only
4. Recipe - update to current user
5. Like -- update to current user
6. Before_action :require_user , except: [:show, :index]
7. Before_action :require_same_user for chefs, only: [:edit, :update]







Chefs:

What we have:
- Chef model and chef validations
- chefs table with column chefname and email

What we need to do:
- Add passwords to the chefs table so chefs can be authenticated and logged in
- Use email as log in credentials, since email is unique
- Ability to register new chefs to use the app
- Ability to display chefs profile
- Ability to list all chefs
- Ability to log in and log out
-Restrict actions like create recipe , edit recipe and like feature to logged in chefs only
- Restricting edit of recipes by chefs who created the Recipe
-  





testing specs for recipes:

name :string
summary :text
description :text

-name must be present
-name must be between 5-100 chars
- summary must be present
- summary between 10- 150 chars
- description must be present
- description must be between 20- 500 chars
-chef_id must be present



testing specs for chefs:
chefname: string
email: string

-chefname must be present
- chefname must be cteween 3- 40 chars
- email must be present
-email must be unique(since used for logins)
-email must be valid
















== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
